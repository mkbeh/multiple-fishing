# IMPORTANT!!! If will be error with upload images like `403` Permission denied` -
# set up real user name to user var
user                     django;
worker_processes         auto;
worker_rlimit_nofile     40000;
pid                      /run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

# only log critical errors
error_log /var/log/nginx/error.log error;

events {
        worker_connections    <set_value>;  # calc: worker_rlimit_nofile / worker_processes
        multi_accept          on;
        use                   epoll;
}

http {
        ##
        # Basic Settings
        ##

        # set buffer and send/read timeouts
        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;

        # cache informations about FDs, frequently accessed files
        # can boost performance, but you need to test those values
        open_file_cache max=200000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;

        types_hash_max_size 2048;
        server_tokens off;

        # to boost I/O on HDD we can disable access logs
        access_log off;

        # copies data between one FD and other from within the kernel
        # faster than read() + write()
        sendfile on;

        # send headers in one piece, it is better than sending them one by one
        tcp_nopush on;

        # don't buffer data sent, good for small data bursts in real time
        tcp_nodelay on;

        # allow the server to close connection on non responding client, this will free up memory
        reset_timedout_connection on;

        # request timed out -- default 60
        client_body_timeout 10;

        # if client stop responding, free up memory -- default 60
        send_timeout 20;

        # server will close connection after this time -- default 75
        keepalive_timeout 60;


        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Gzip Settings
        ##

        gzip on;

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types
                # text/html is always compressed by HttpGzipModule
                text/css
                text/javascript
                text/xml
                text/plain
                text/x-component
                application/javascript
                application/x-javascript
                application/json
                application/xml
                application/rss+xml
                application/atom+xml
                font/truetype
                font/opentype
                application/vnd.ms-fontobject
                image/svg+xml;

        ##
        # Simple DDoS Defense
        ##

        # if the request body size is more than the buffer size, then the entire (or partial)
        # request body is written into a temporary file
        client_body_buffer_size  4m;

        # buffer size for reading client request header -- for testing environment
        client_header_buffer_size 3m;

        # limit the number of connections per single IP
        limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

        # limit the number of requests for a given session
        limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

        # Other
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        ##
        # Default server
        # zone which we want to limit by upper values, we want limit whole server
        ##

        server {
                location ~* .(jpg|jpeg|png|gif|ico|css|js|eot|svg|ttf|woff|pdf)$
                {
                        limit_conn conn_limit_per_ip 10;
                        limit_req zone=req_limit_per_ip burst=10 nodelay;

                        expires 365d;
                        return 301 $scheme://<domain.com>;
                }
        }

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}